{"remainingRequest":"/Users/hezitai/Desktop/Android x H5/webview_vue/node_modules/thread-loader/dist/cjs.js!/Users/hezitai/Desktop/Android x H5/webview_vue/node_modules/babel-loader/lib/index.js!/Users/hezitai/Desktop/Android x H5/webview_vue/src/methods/index.js","dependencies":[{"path":"/Users/hezitai/Desktop/Android x H5/webview_vue/src/methods/index.js","mtime":1605162956858},{"path":"/Users/hezitai/Desktop/Android x H5/webview_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Android x H5/webview_vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Android x H5/webview_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/hezitai/Desktop/Android x H5/webview_vue/src/methods/index.js"],"names":["request","getCurrentJob","_this","url","type","data","dataType","timeout","contentType","success","result","window","clearInterval","setinterval","JSON","parse","length","missionForm","missionName","jobName","missionType","jobMode","missionStatus","jobStatus","timesThrowSec","intervalTime","securityDeepMet","safeDeep","settingDepth","setDeep","settingThrowTimes","dropTimes","thisSettingThrowTimes","runTimes","realTimeJobId","jobId","getRealtimeJob","setInterval","error","e","setinterval1","console","log","getishow","formArray","stringify","getDataSec","apparatusSetInterval","getApparatusData","thisTimes","thisApparatusTimes","limit","thisApparatuslimit","row","start_time","apparatusForm","getDataTime","timeTag","resultdata","i","j","fieldName","vals","getwshow","formArrayWinch","getWinchData","resultUseCharts","resultUseCharts1","toFixed","winchForm","thisWinchTimes","checkboxarray","k","arr","value","y","u","p","array","checked","dataValue","getWinchDataSec","winchSetInterval","thisWinchlimit","getStatusDefine","b","c","indexOf","push","o","a","name","aaa","bbb","readyRenderCheckboxData","getAlert","alertSetInterval","getAlarmRealtime","time","thisAlertTime","thisAlertlimit","timeTags","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","alertArray","unshift"],"mappings":"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","sourcesContent":["import request from \"../../utils/request.js\";\nexport default {\n    /**\n     * 获取最新任务信息\n     */\n    async getCurrentJob() {\n        let _this = this;\n        request({\n            url: \"/job/get_current_job\",\n            type: 'GET',\n            data: '',\n            dataType: 'json',\n            timeout: 200000,\n            contentType: \"application/json\",\n            success: function(result) {\n                window.clearInterval(_this.setinterval);\n                result = JSON.parse(result)\n                if (result.length > 0) {\n                    _this.missionForm = {\n                        missionName: result[0].jobName,\n                        missionType: result[0].jobMode,\n                        missionStatus: result[0].jobStatus,\n                        timesThrowSec: result[0].intervalTime,\n                        securityDeepMet: result[0].safeDeep,\n                        settingDepth: result[0].setDeep,\n                        settingThrowTimes: result[0].dropTimes == -1 ? '无限次' : result[0].dropTimes,\n                        thisSettingThrowTimes: result[0].runTimes\n                    };\n                    _this.realTimeJobId = result[0].jobId;\n                    _this.getRealtimeJob(_this.realTimeJobId)\n                } else {\n                    _this.setinterval = window.setInterval(() => {\n                        _this.getCurrentJob()\n                    }, 1000);\n                }\n                // alert(result);\n            },\n            //异常处理\n            error: function(e) {\n                // console.log(e);\n                // alert(e);\n            }\n        })\n    },\n\n    /**\n     * 获取当前任务信息\n     */\n    async getRealtimeJob(jobId) {\n        let _this = this;\n        request({\n            url: \"/job/get_job_realdata\",\n            type: 'GET',\n            data: {\n                jobId: jobId,\n            },\n            dataType: 'json',\n            timeout: 200000,\n            contentType: \"application/json\",\n            success: function(result) {\n\n                result = JSON.parse(result)\n                window.clearInterval(_this.setinterval1);\n                if (result.length != 0) {\n                    _this.missionForm = {\n                        missionName: result[0].jobName,\n                        missionType: result[0].jobMode,\n                        missionStatus: result[0].jobStatus,\n                        timesThrowSec: result[0].intervalTime,\n                        securityDeepMet: result[0].safeDeep,\n                        settingDepth: result[0].setDeep,\n                        settingThrowTimes: result[0].dropTimes == -1 ? '无限次' : result[0].dropTimes,\n                        thisSettingThrowTimes: result[0].runTimes\n                    }\n                    if (result[0].jobStatus >= 768) {\n                        _this.getCurrentJob();\n                    } else {\n                        _this.setinterval1 = window.setInterval(() => {\n                            _this.getRealtimeJob(_this.realTimeJobId);\n                        }, 1000)\n                    }\n                }\n            },\n            //异常处理\n            error: function(e) {\n                console.log(e);\n            }\n        })\n    },\n\n    /**\n     * 获取ishow \n     * */\n    async getishow() {\n        let _this = this;\n        request({\n            url: \"/sys-define/get_ishow_define\",\n            type: 'GET',\n            data: '',\n            dataType: 'json',\n            timeout: 200000,\n            contentType: \"application/json\",\n            success: function(result) {\n\n                result = JSON.parse(result);\n                _this.formArray = JSON.parse(JSON.stringify(result));\n            },\n            error: function(e) {\n                console.log(e);\n            }\n        })\n    },\n\n    getDataSec() {\n        let _this = this;\n        window.clearInterval(_this.apparatusSetInterval);\n        _this.apparatusSetInterval = setInterval(() => {\n            _this.getApparatusData({\n                thisTimes: _this.thisApparatusTimes,\n                limit: _this.thisApparatuslimit\n            })\n        }, 1000)\n    },\n    /**\n     * 获取仪器实时数据\n     */\n    async getApparatusData(row) {\n        let _this = this;\n        request({\n            url: \"/realtime\",\n            type: 'GET',\n            data: {\n                start_time: row.thisTimes,\n                limit: row.limit,\n            },\n            dataType: 'json',\n            timeout: 200000,\n            contentType: \"application/json\",\n            success: function(result) {\n\n                result = JSON.parse(result)\n                if (result.length > 0) {\n                    // 获取时间\n                    _this.apparatusForm = {\n                        getDataTime: result[0].timeTag,\n                    };\n                    _this.thisApparatusTimes = result[0].timeTag;\n\n                    let resultdata = result[0]\n                        // input框赋值\n                    for (let i in _this.formArray) {\n                        for (let j in resultdata) {\n                            if (_this.formArray[i].fieldName == j) {\n                                _this.formArray[i].vals = resultdata[j];\n                            }\n                        }\n                    };\n                    _this.thisApparatuslimit = '';\n                }\n            },\n            error: function(e) {\n                console.log(e);\n            }\n        })\n    },\n\n    /**\n     * 获取wshow\n     * */\n    async getwshow() {\n        let _this = this;\n        request({\n            url: \"/sys-define/get_wshow_define\",\n            type: 'GET',\n            data: '',\n            dataType: 'json',\n            timeout: 200000,\n            contentType: \"application/json\",\n            success: function(result) {\n                result = JSON.parse(result);\n                _this.formArrayWinch = JSON.parse(JSON.stringify(result));\n            },\n            error: function(e) {\n                console.log(e);\n            }\n        })\n    },\n\n    /**\n     * 获取绞车实时数据\n     * */\n    async getWinchData(row) {\n        let _this = this;\n        request({\n            url: \"/winch/get_realdata\",\n            type: 'GET',\n            data: {\n                start_time: row.thisTimes,\n                limit: row.limit,\n            },\n            dataType: 'json',\n            timeout: 200000,\n            contentType: \"application/json\",\n            success: function(result) {\n                result = JSON.parse(result);\n                if (result.length > 0) {\n                    let resultUseCharts = JSON.parse(JSON.stringify(result))\n                    let resultUseCharts1 = JSON.parse(JSON.stringify(result))\n                    for (let i in resultUseCharts[0]) {\n                        if (typeof resultUseCharts[0][i] == 'number') {\n                            resultUseCharts[0][i] = resultUseCharts[0][i] == null ? 0 : resultUseCharts[0][i].toFixed(2)\n                        }\n                    }\n\n                    // 获取时间\n                    _this.winchForm = {\n                        getDataTime: result[0].timeTag,\n                    };\n                    _this.thisWinchTimes = result[0].timeTag;\n\n                    let resultdata = result[0]\n                        // input框赋值\n                    for (let i in _this.formArrayWinch) {\n                        for (let j in resultdata) {\n                            if (_this.formArrayWinch[i].fieldName == j) {\n                                _this.formArrayWinch[i].vals = resultdata[j];\n                            }\n\n                        }\n                    };\n                    for (let i in resultUseCharts1[0]) {\n                        for (let j in _this.checkboxarray) {\n                            for (let k in _this.checkboxarray[j].arr) {\n                                if (i == _this.checkboxarray[j].arr[k].fieldName) {\n                                    _this.checkboxarray[j].arr[k].value = resultUseCharts1[0][i]\n                                }\n                            }\n                        }\n                    }\n                    for (let y = 0; y < _this.checkboxarray.length; y++) {\n                        for (let u = 0; u < _this.checkboxarray[y].arr.length; u++) {\n                            for (let p = 0; p < _this.checkboxarray[y].arr[u].array.length; p++) {\n                                _this.checkboxarray[y].arr[u].array[p].checked = false;\n                                if ((_this.checkboxarray[y].arr[u].value & _this.checkboxarray[y].arr[u].array[p].dataValue) > 0) {\n                                    _this.checkboxarray[y].arr[u].array[p].checked = true\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            error: function(e) {\n                console.log(e);\n            }\n        })\n    },\n\n    getWinchDataSec() {\n        let _this = this;\n        window.clearInterval(_this.winchSetInterval);\n        _this.winchSetInterval = setInterval(() => {\n            _this.getWinchData({\n                thisTimes: _this.thisWinchTimes,\n                limit: _this.thisWinchlimit\n            })\n        }, 1000)\n    },\n    async getStatusDefine() {\n        let _this = this;\n        request({\n            url: \"/winch/get_status_define\",\n            type: 'GET',\n            data: '',\n            dataType: 'json',\n            timeout: 200000,\n            contentType: \"application/json\",\n            success: function(result) {\n                result = JSON.parse(result);\n                _this.checkboxarray = [];\n                let b = [];\n                let c = [];\n                for (let i in result) {\n                    if (b.indexOf(result[i].dataType) == -1) {\n                        b.push(result[i].dataType)\n                    }\n                    if (c.indexOf(result[i].fieldName) == -1) {\n                        c.push(result[i].fieldName)\n                    }\n                }\n                for (let o = 0; o < b.length; o++) {\n                    let a = {\n                        name: '',\n                        arr: [],\n                        dataType: '',\n                    };\n                    _this.checkboxarray.push(a)\n                }\n                for (let i = 0; i < b.length; i++) {\n                    for (let j = 0; j < result.length; j++) {\n                        if (b[i] == result[j].dataType) {\n                            _this.checkboxarray[i].dataType = result[j].dataType;\n                            if (_this.checkboxarray[i].name == '') {\n                                _this.checkboxarray[i].name = result[j].fieldName + ' System'\n                            }\n                            _this.checkboxarray[i].arr.push(result[j])\n                        }\n                    }\n                }\n                let aaa = [];\n                for (let i in c) {\n                    let bbb = {\n                        name: c[i],\n                        array: [],\n                        value: 0,\n                        dataType: '',\n                    };\n                    aaa.push(bbb)\n                }\n                for (let i = 0; i < _this.checkboxarray.length; i++) {\n                    for (let j = 0; j < _this.checkboxarray[i].arr.length; j++) {\n                        for (let k in aaa) {\n                            if (aaa[k].name == _this.checkboxarray[i].arr[j].fieldName) {\n                                aaa[k].array.push(_this.checkboxarray[i].arr[j]);\n                                aaa[k].dataType = _this.checkboxarray[i].arr[j].dataType\n                            }\n                        }\n\n                    }\n                }\n                for (let i = 0; i < _this.checkboxarray.length; i++) {\n                    _this.checkboxarray[i].arr = [];\n                    for (let j = 0; j < aaa.length; j++) {\n                        if (_this.checkboxarray[i].dataType == aaa[j].dataType) {\n                            for (let k in aaa[j].array) {\n                                aaa[j].array[k].checked = false\n                            }\n                            _this.checkboxarray[i].arr.push({\n                                array: aaa[j].array,\n                                value: 0,\n                                fieldName: aaa[j].name,\n                                dataType: aaa[j].dataType,\n                            })\n                        }\n                    }\n                }\n                _this.readyRenderCheckboxData = true\n            },\n            error: function(e) {\n                console.log(e);\n            }\n        })\n    },\n\n    getAlert() {\n        let _this = this;\n        window.clearInterval(this.alertSetInterval);\n        this.alertSetInterval = window.setInterval(() => {\n            _this.getAlarmRealtime({\n                time: _this.thisAlertTime,\n                limit: _this.thisAlertlimit,\n            });\n        }, 1000);\n    },\n    async getAlarmRealtime(row) {\n        let _this = this;\n        request({\n            url: \"/sys-define/get_alarm_realtime\",\n            type: 'GET',\n            data: {\n                start_time: row.time,\n                limit: row.limit,\n            },\n            dataType: 'json',\n            timeout: 200000,\n            contentType: \"application/json\",\n            success: function(result) {\n                result = JSON.parse(result)\n                if (result.length > 0) {\n                    for (let i in result) {\n                        result[i].timeTags = new Date(result[i].timeTag).getFullYear() + '-' + (new Date(result[i].timeTag).getMonth() + 1 < 10 ? '0' + (new Date(result[i].timeTag).getMonth() + 1) : new Date(result[i].timeTag).getMonth() + 1) + '-' + (new Date(result[i].timeTag).getDate() < 10 ? '0' + new Date(result[i].timeTag).getDate() : new Date(result[i].timeTag).getDate()) + ' ' + (new Date(result[i].timeTag).getHours() < 10 ? '0' + new Date(result[i].timeTag).getHours() : new Date(result[i].timeTag).getHours()) + ':' + (new Date(result[i].timeTag).getMinutes() < 10 ? '0' + new Date(result[i].timeTag).getMinutes() : new Date(result[i].timeTag).getMinutes()) + ':' + (new Date(result[i].timeTag).getSeconds() < 10 ? '0' + new Date(result[i].timeTag).getSeconds() : new Date(result[i].timeTag).getSeconds());\n                        _this.alertArray.unshift(result[i]);\n                    }\n                    _this.thisAlertTime = result[0].timeTag;\n                }\n            },\n            error: function(e) {\n                console.log(e);\n            }\n        })\n    },\n\n}"]}]}