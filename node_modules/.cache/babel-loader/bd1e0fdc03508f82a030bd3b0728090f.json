{"remainingRequest":"/Users/hezitai/Desktop/Android x H5/webview_vue/node_modules/babel-loader/lib/index.js!/Users/hezitai/Desktop/Android x H5/webview_vue/src/methods/indexs.js","dependencies":[{"path":"/Users/hezitai/Desktop/Android x H5/webview_vue/src/methods/indexs.js","mtime":1605253814377},{"path":"/Users/hezitai/Desktop/Android x H5/webview_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/Android x H5/webview_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/hezitai/Desktop/Android x H5/webview_vue/src/methods/indexs.js"],"names":["request","getCurrentJob","_this","url","method","result","window","clearInterval","setinterval","data","length","missionForm","missionName","jobName","missionType","jobMode","missionStatus","jobStatus","timesThrowSec","intervalTime","securityDeepMet","safeDeep","settingDepth","setDeep","settingThrowTimes","dropTimes","thisSettingThrowTimes","runTimes","realTimeJobId","jobId","getRealtimeJob","setInterval","error","console","params","setinterval1","getishow","formArray","JSON","parse","stringify","getApparatusData","row","start_time","thisTimes","limit","resultUseCharts","apparatusForm","getDataTime","timeTag","thisApparatusTimes","resultdata","i","j","fieldName","vals","thisApparatuslimit","getwshow","formArrayWinch","getWinchData","resultUseCharts1","toFixed","winchForm","thisWinchTimes","checkboxarray","k","arr","value","y","u","p","array","checked","dataValue","getStatusDefine","b","c","indexOf","dataType","push","o","a","name","aaa","bbb","readyRenderCheckboxData","getAlarmRealtime","time","document","getElementById","classList","add","timeTags","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","alertArray","unshift","thisAlertTime","log","thisAlertlimit","clicktabs","remove","getDataSec","apparatusSetInterval","getWinchDataSec","winchSetInterval","thisWinchlimit","getAlert","alertSetInterval"],"mappings":"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","sourcesContent":["import request from \"../../utils/requests.js\";\nexport default {\n    /**\n     * 获取最新任务信息\n     */\n    async getCurrentJob() {\n        let _this = this;\n        let result = await request({\n            url: \"/job/get_current_job\",\n            method: \"get\"\n        });\n        try {\n            window.clearInterval(_this.setinterval);\n            if (result.data.length > 0) {\n                _this.missionForm = {\n                    missionName: result.data[0].jobName,\n                    missionType: result.data[0].jobMode,\n                    missionStatus: result.data[0].jobStatus,\n                    timesThrowSec: result.data[0].intervalTime,\n                    securityDeepMet: result.data[0].safeDeep,\n                    settingDepth: result.data[0].setDeep,\n                    settingThrowTimes: result.data[0].dropTimes == -1 ? '无限次' : result.data[0].dropTimes,\n                    thisSettingThrowTimes: result.data[0].runTimes\n                };\n                _this.realTimeJobId = result.data[0].jobId;\n                _this.getRealtimeJob(_this.realTimeJobId)\n            } else {\n                _this.setinterval = window.setInterval(() => {\n                    _this.getCurrentJob()\n                }, 1000);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    /**\n     * 获取当前任务信息\n     */\n    async getRealtimeJob(jobId) {\n        let _this = this;\n        let result = await request({\n            url: \"/job/get_job_realdata\",\n            method: \"get\",\n            params: {\n                jobId: jobId,\n            }\n        });\n        try {\n            window.clearInterval(_this.setinterval1);\n            if (result.data.length != 0) {\n                _this.missionForm = {\n                    missionName: result.data[0].jobName,\n                    missionType: result.data[0].jobMode,\n                    missionStatus: result.data[0].jobStatus,\n                    timesThrowSec: result.data[0].intervalTime,\n                    securityDeepMet: result.data[0].safeDeep,\n                    settingDepth: result.data[0].setDeep,\n                    settingThrowTimes: result.data[0].dropTimes == -1 ? '无限次' : result.data[0].dropTimes,\n                    thisSettingThrowTimes: result.data[0].runTimes\n                }\n                if (result.data[0].jobStatus >= 768) {\n                    // if (_this.userlevel == 0) {\n                    //     _this.si = window.setInterval(() => {\n                    //         _this.exportFile(jobId)\n                    //     }, 1000)\n                    // }\n                    _this.getCurrentJob();\n                } else {\n                    _this.setinterval1 = window.setInterval(() => {\n                        _this.getRealtimeJob(_this.realTimeJobId);\n                    }, 1000)\n                }\n            } else {\n\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    /**\n     * 获取ishow \n     * */\n    async getishow() {\n        let _this = this;\n        let result = await request({\n            url: \"sys-define/get_ishow_define\",\n            method: \"get\"\n        });\n        try {\n            _this.formArray = JSON.parse(JSON.stringify(result.data));\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    /**\n     * 获取仪器实时数据\n     */\n    async getApparatusData(row) {\n        let _this = this;\n        let result = await request({\n            url: \"realtime\",\n            method: \"get\",\n            params: {\n                start_time: row.thisTimes,\n                limit: row.limit,\n            }\n        });\n        try {\n            if (result.data.length > 0) {\n                let resultUseCharts = JSON.parse(JSON.stringify(result));\n                // 获取时间\n                _this.apparatusForm = {\n                    getDataTime: result.data[0].timeTag,\n                };\n                _this.thisApparatusTimes = result.data[0].timeTag;\n\n                let resultdata = result.data[0]\n                    // input框赋值\n                for (let i in _this.formArray) {\n                    for (let j in resultdata) {\n                        if (_this.formArray[i].fieldName == j) {\n                            _this.formArray[i].vals = resultdata[j];\n                        }\n\n                    }\n                };\n                // console.log(_this.formArray)\n                _this.thisApparatuslimit = '';\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    /**\n     * 获取wshow\n     * */\n    async getwshow() {\n        let _this = this;\n        let result = await request({\n            url: \"sys-define/get_wshow_define\",\n            method: \"get\"\n        });\n        try {\n            _this.formArrayWinch = JSON.parse(JSON.stringify(result.data));\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    /**\n     * 获取绞车实时数据\n     * */\n    async getWinchData(row) {\n        let _this = this;\n        let result = await request({\n            url: \"winch/get_realdata\",\n            method: \"get\",\n            params: {\n                start_time: row.thisTimes,\n                limit: row.limit,\n            }\n        });\n        try {\n            /**\n             * 初始化Echarts  X轴\n             */\n            if (result.data.length > 0) {\n                let resultUseCharts = JSON.parse(JSON.stringify(result))\n                let resultUseCharts1 = JSON.parse(JSON.stringify(result))\n                for (let i in resultUseCharts.data[0]) {\n                    if (typeof resultUseCharts.data[0][i] == 'number') {\n                        resultUseCharts.data[0][i] = resultUseCharts.data[0][i] == null ? 0 : resultUseCharts.data[0][i].toFixed(2)\n                    }\n                }\n\n                // 获取时间\n                _this.winchForm = {\n                    getDataTime: result.data[0].timeTag,\n                };\n                _this.thisWinchTimes = result.data[0].timeTag;\n\n                let resultdata = result.data[0]\n                    // input框赋值\n                for (let i in _this.formArrayWinch) {\n                    for (let j in resultdata) {\n                        if (_this.formArrayWinch[i].fieldName == j) {\n                            _this.formArrayWinch[i].vals = resultdata[j];\n                        }\n\n                    }\n                };\n                for (let i in resultUseCharts1.data[0]) {\n                    for (let j in _this.checkboxarray) {\n                        for (let k in _this.checkboxarray[j].arr) {\n                            if (i == _this.checkboxarray[j].arr[k].fieldName) {\n                                _this.checkboxarray[j].arr[k].value = resultUseCharts1.data[0][i]\n                            }\n                        }\n                    }\n                }\n                for (let y = 0; y < _this.checkboxarray.length; y++) {\n                    for (let u = 0; u < _this.checkboxarray[y].arr.length; u++) {\n                        for (let p = 0; p < _this.checkboxarray[y].arr[u].array.length; p++) {\n                            _this.checkboxarray[y].arr[u].array[p].checked = false;\n                            if ((_this.checkboxarray[y].arr[u].value & _this.checkboxarray[y].arr[u].array[p].dataValue) > 0) {\n                                _this.checkboxarray[y].arr[u].array[p].checked = true\n                            }\n                        }\n                    }\n                }\n                // console.log(_this.checkboxarray)\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    async getStatusDefine() {\n        let _this = this;\n        let result = await request({\n            url: \"winch/get_status_define\",\n            method: \"get\"\n        });\n        try {\n            _this.checkboxarray = [];\n            let b = [];\n            let c = [];\n            for (let i in result.data) {\n                if (b.indexOf(result.data[i].dataType) == -1) {\n                    b.push(result.data[i].dataType)\n                }\n                if (c.indexOf(result.data[i].fieldName) == -1) {\n                    c.push(result.data[i].fieldName)\n                }\n            }\n            for (let o = 0; o < b.length; o++) {\n                let a = {\n                    name: '',\n                    arr: [],\n                    dataType: '',\n                };\n                _this.checkboxarray.push(a)\n            }\n            for (let i = 0; i < b.length; i++) {\n                for (let j = 0; j < result.data.length; j++) {\n                    if (b[i] == result.data[j].dataType) {\n                        _this.checkboxarray[i].dataType = result.data[j].dataType;\n                        if (_this.checkboxarray[i].name == '') {\n                            _this.checkboxarray[i].name = result.data[j].fieldName + ' System'\n                        }\n                        _this.checkboxarray[i].arr.push(result.data[j])\n                    }\n                }\n            }\n            let aaa = [];\n            for (let i in c) {\n                let bbb = {\n                    name: c[i],\n                    array: [],\n                    value: 0,\n                    dataType: '',\n                };\n                aaa.push(bbb)\n            }\n            for (let i = 0; i < _this.checkboxarray.length; i++) {\n                for (let j = 0; j < _this.checkboxarray[i].arr.length; j++) {\n                    for (let k in aaa) {\n                        if (aaa[k].name == _this.checkboxarray[i].arr[j].fieldName) {\n                            aaa[k].array.push(_this.checkboxarray[i].arr[j]);\n                            aaa[k].dataType = _this.checkboxarray[i].arr[j].dataType\n                        }\n                    }\n\n                }\n            }\n            for (let i = 0; i < _this.checkboxarray.length; i++) {\n                _this.checkboxarray[i].arr = [];\n                for (let j = 0; j < aaa.length; j++) {\n                    if (_this.checkboxarray[i].dataType == aaa[j].dataType) {\n                        for (let k in aaa[j].array) {\n                            aaa[j].array[k].checked = false\n                        }\n                        _this.checkboxarray[i].arr.push({\n                            array: aaa[j].array,\n                            value: 0,\n                            fieldName: aaa[j].name,\n                            dataType: aaa[j].dataType,\n                        })\n                    }\n                }\n            }\n            _this.readyRenderCheckboxData = true\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    async getAlarmRealtime(row) {\n        let _this = this;\n        let result = await request({\n            url: \"/sys-define/get_alarm_realtime\",\n            method: \"get\",\n            params: {\n                start_time: row.time,\n                limit: row.limit,\n                // limit: '',\n            },\n        });\n        try {\n            if (result.data.length > 0) {\n                if (row.time != '') {\n                    document.getElementById('alerttab').classList.add('alerttab');\n                    for (let i in result.data) {\n                        result.data[i].timeTags = new Date(result.data[i].timeTag).getFullYear() + '-' + (new Date(result.data[i].timeTag).getMonth() + 1 < 10 ? '0' + (new Date(result.data[i].timeTag).getMonth() + 1) : new Date(result.data[i].timeTag).getMonth() + 1) + '-' + (new Date(result.data[i].timeTag).getDate() < 10 ? '0' + new Date(result.data[i].timeTag).getDate() : new Date(result.data[i].timeTag).getDate()) + ' ' + (new Date(result.data[i].timeTag).getHours() < 10 ? '0' + new Date(result.data[i].timeTag).getHours() : new Date(result.data[i].timeTag).getHours()) + ':' + (new Date(result.data[i].timeTag).getMinutes() < 10 ? '0' + new Date(result.data[i].timeTag).getMinutes() : new Date(result.data[i].timeTag).getMinutes()) + ':' + (new Date(result.data[i].timeTag).getSeconds() < 10 ? '0' + new Date(result.data[i].timeTag).getSeconds() : new Date(result.data[i].timeTag).getSeconds());\n                        _this.alertArray.unshift(result.data[i]);\n                    }\n                } else {\n                    for (let i in result.data) {\n                        result.data[i].timeTags = new Date(result.data[i].timeTag).getFullYear() + '-' + (new Date(result.data[i].timeTag).getMonth() + 1 < 10 ? '0' + (new Date(result.data[i].timeTag).getMonth() + 1) : new Date(result.data[i].timeTag).getMonth() + 1) + '-' + (new Date(result.data[i].timeTag).getDate() < 10 ? '0' + new Date(result.data[i].timeTag).getDate() : new Date(result.data[i].timeTag).getDate()) + ' ' + (new Date(result.data[i].timeTag).getHours() < 10 ? '0' + new Date(result.data[i].timeTag).getHours() : new Date(result.data[i].timeTag).getHours()) + ':' + (new Date(result.data[i].timeTag).getMinutes() < 10 ? '0' + new Date(result.data[i].timeTag).getMinutes() : new Date(result.data[i].timeTag).getMinutes()) + ':' + (new Date(result.data[i].timeTag).getSeconds() < 10 ? '0' + new Date(result.data[i].timeTag).getSeconds() : new Date(result.data[i].timeTag).getSeconds());\n                        _this.alertArray.push(result.data[i]);\n                    }\n                }\n                _this.thisAlertTime = result.data[0].timeTag;\n                console.log(result.data[0].timeTag);\n                _this.thisAlertlimit = '';\n            }\n        } catch (error) {}\n    },\n    clicktabs(name) {\n        // console.log(name);\n        if (name == 3) {\n            document.getElementById('alerttab').classList.remove('alerttab');\n        }\n    },\n    getDataSec() {\n        let _this = this;\n        window.clearInterval(_this.apparatusSetInterval);\n        _this.apparatusSetInterval = setInterval(() => {\n            _this.getApparatusData({\n                thisTimes: _this.thisApparatusTimes,\n                limit: _this.thisApparatuslimit\n            })\n        }, 1000)\n    },\n    getWinchDataSec() {\n        let _this = this;\n        window.clearInterval(_this.winchSetInterval);\n        _this.winchSetInterval = setInterval(() => {\n            _this.getWinchData({\n                thisTimes: _this.thisWinchTimes,\n                limit: _this.thisWinchlimit\n            })\n        }, 1000)\n    },\n    getAlert() {\n        let _this = this;\n        window.clearInterval(this.alertSetInterval);\n        this.alertSetInterval = window.setInterval(() => {\n            _this.getAlarmRealtime({\n                time: _this.thisAlertTime,\n                limit: _this.thisAlertlimit,\n            });\n        }, 1000);\n    },\n}"]}]}